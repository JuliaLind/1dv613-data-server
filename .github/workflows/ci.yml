name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  NODE_ENV: test
  PORT: 8080
  DB_CONNECTION_STRING: mongodb://localhost:27017/data
  AUTH_TOKEN_SECRET_PATH: './public.pem'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run lint

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run test:unit

  test-scen:
    name: Scenario Tests
    runs-on: ubuntu-latest
    env:
      DB_CONNECTION_STRING: mongodb://localhost:27017/data_test
      AUTH_TOKEN_SECRET_PATH: ./test_public.pem
    steps:
      - uses: actions/checkout@v4

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: 7

      - name: Write public key
        run: echo "${{ secrets.TEST_PUBLIC_PEM }}" > test_public.pem

      - run: npm ci
      - run: npm run test:scen

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint, test-unit, test-scen]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start ssh-agent and add private key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Set remote Docker host (via SSH)
        run: echo "DOCKER_HOST=ssh://root@${{ secrets.PRODUCTION_HOST }}" >> $GITHUB_ENV

      - name: Deploy data-server via Docker Compose
        run: |
          docker compose -f docker-compose.digi.yml up -d --build --force-recreate
