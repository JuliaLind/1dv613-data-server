{
  "openapi": "3.0.0",
  "info": {
    "title": "Data-server API",
    "version": "1.0.0",
    "description": "Stores meal and food information for SlimDreams app"
  },
  "servers": [
    {
      "url": "/data/api/v1"
    }
  ],
  "paths": {
    "/foods": {
      "get": {
        "summary": "Retrieve all foods",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer" },
            "required": false,
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "required": false,
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of food items with pagination info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "foodItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "img": {
                            "type": "object",
                            "properties": {
                              "sm": { "type": "string", "format": "uri" }
                            }
                          },
                          "name": { "type": "string" },
                          "brand": { "type": "string" },
                          "ean": { "type": "string" },
                          "kcal_100g": { "type": "number" },
                          "macros_100g": {
                            "type": "object",
                            "properties": {
                              "fat": { "type": "number", "example": 3 },
                              "saturatedFat": { "type": "number", "example": 1.9 },
                              "carbohydrates": { "type": "number", "example": 3.7 },
                              "sugars": { "type": "number", "example": 3.7 },
                              "protein": { "type": "number", "example": 3.5 },
                              "salt": { "type": "number", "example": 0.09 },
                              "fiber": { "type": "number", "example": 0 }
                            }
                          }
                        }
                      }
                    },
                    "total": { "type": "integer" },
                    "page": { "type": "integer" },
                    "pageSize": { "type": "integer" },
                    "from": { "type": "integer" },
                    "to": { "type": "integer" }
                  }
                },
                "example": {
                  "foodItems": [
                    {
                      "img": {
                          "sm": "https://assets.axfood.se/image/upload/f_auto,t_100/08007153007490_C1C1_s01"
                      },
                      "macros_100g": {
                          "fat": 92,
                          "saturatedFat": 14,
                          "carbohydrates": 0,
                          "sugars": 0,
                          "protein": 0,
                          "salt": 0,
                          "fiber": 0
                      },
                      "name": "100% Italiensk Extra Virgin Olivolja",
                      "brand": "Farchioni",
                      "ean": "8007153007490",
                      "kcal_100g": 828
                  },
                  {
                      "img": {
                          "sm": "https://assets.axfood.se/image/upload/f_auto,t_100/07350029731557_C1L1_s04"
                      },
                      "macros_100g": {
                          "fat": 12,
                          "saturatedFat": 1.2,
                          "carbohydrates": 14,
                          "sugars": 0.6,
                          "protein": 14,
                          "salt": 0.96,
                          "fiber": 11
                      },
                      "name": "14% Bröd",
                      "brand": "Dahls Bageri",
                      "ean": "7350029731557",
                      "kcal_100g": 230
                  }
                  ],
                  "total": 6482,
                  "page": 3,
                  "pageSize": 2,
                  "from": 5,
                  "to": 6
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/foods/search/{search}": {
      "get": {
        "summary": "Retrieve all foods that contain a search query in name or brand",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer" },
            "required": false,
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "required": false,
            "description": "Items per page"
          },
          {
            "in": "path",
            "name": "search",
            "schema": { "type": "string" },
            "required": true,
            "description": "The partial string to search for in name or brand"
          }
        ],
        "responses": {
          "200": {
            "description": "List of food items with pagination info and the search query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "foodItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "img": {
                            "type": "object",
                            "properties": {
                              "sm": { "type": "string", "format": "uri" }
                            }
                          },
                          "name": { "type": "string" },
                          "brand": { "type": "string" },
                          "ean": { "type": "string" },
                          "kcal_100g": { "type": "number" },
                          "macros_100g": {
                            "type": "object",
                            "properties": {
                              "fat": { "type": "number", "example": 3 },
                              "saturatedFat": { "type": "number", "example": 1.9 },
                              "carbohydrates": { "type": "number", "example": 3.7 },
                              "sugars": { "type": "number", "example": 3.7 },
                              "protein": { "type": "number", "example": 3.5 },
                              "salt": { "type": "number", "example": 0.09 },
                              "fiber": { "type": "number", "example": 0 }
                            }
                          }
                        }
                      }
                    },
                    "total": { "type": "integer" },
                    "page": { "type": "integer" },
                    "pageSize": { "type": "integer" },
                    "from": { "type": "integer" },
                    "to": { "type": "integer" }
                  }
                },
                "example": {
                  "foodItems": [
                    {
                      "img": {
                          "sm": "https://assets.axfood.se/image/upload/f_auto,t_100/08007153007490_C1C1_s01"
                      },
                      "macros_100g": {
                          "fat": 92,
                          "saturatedFat": 14,
                          "carbohydrates": 0,
                          "sugars": 0,
                          "protein": 0,
                          "salt": 0,
                          "fiber": 0
                      },
                      "name": "100% Italiensk Extra Virgin Olivolja",
                      "brand": "Farchioni",
                      "ean": "8007153007490",
                      "kcal_100g": 828
                  },
                  {
                      "img": {
                          "sm": "https://assets.axfood.se/image/upload/f_auto,t_100/07350029731557_C1L1_s04"
                      },
                      "macros_100g": {
                          "fat": 12,
                          "saturatedFat": 1.2,
                          "carbohydrates": 14,
                          "sugars": 0.6,
                          "protein": 14,
                          "salt": 0.96,
                          "fiber": 11
                      },
                      "name": "14% Bröd",
                      "brand": "Farchioni",
                      "ean": "7350029731557",
                      "kcal_100g": 230
                  }
                  ],
                  "total": 2,
                  "page": 1,
                  "pageSize": 2,
                  "from": 1,
                  "to": 2
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/foods/ean/{ean}": {
      "get": {
        "summary": "Data for a single food item",
        "parameters": [
          {
            "in": "path",
            "name": "ean",
            "schema": { "type": "string" },
            "required": true,
            "description": "The ean number of the food item"
          }
        ],
        "responses": {
          "200": {
            "description": "All data for a single food item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "img": {
                      "type": "object",
                      "properties": {
                        "sm": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://assets.axfood.se/image/upload/f_auto,t_100/07311041071953_C1L1_s04"
                        },
                        "lg": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://assets.axfood.se/image/upload/f_auto,t_500/07311041071953_C1L1_s04"
                        }
                      }
                    },
                    "macros_100g": {
                      "type": "object",
                      "properties": {
                        "fat": { "type": "number", "example": 3 },
                        "saturatedFat": { "type": "number", "example": 1.9 },
                        "carbohydrates": { "type": "number", "example": 3.7 },
                        "sugars": { "type": "number", "example": 3.7 },
                        "protein": { "type": "number", "example": 3.5 },
                        "salt": { "type": "number", "example": 0.09 },
                        "fiber": { "type": "number", "example": 0 }
                      }
                    },
                    "name": {
                      "type": "string",
                      "example": "A-fil Ekologisk 3%"
                    },
                    "brand": {
                      "type": "string",
                      "example": "Garant Eko"
                    },
                    "ean": {
                      "type": "string",
                      "example": "7311041071953"
                    },
                    "category": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["mejeri-ost-och-agg", "filmjolk-och-yoghurt", "filmjolk"]
                    },
                    "kcal_100g": {
                      "type": "number",
                      "example": 58
                    }
                  }
                },
                "example": {
                  "img": {
                      "sm": "https://assets.axfood.se/image/upload/f_auto,t_100/07311041071953_C1L1_s04",
                      "lg": "https://assets.axfood.se/image/upload/f_auto,t_500/07311041071953_C1L1_s04"
                  },
                  "macros_100g": {
                      "fat": 3,
                      "saturatedFat": 1.9,
                      "carbohydrates": 3.7,
                      "sugars": 3.7,
                      "protein": 3.5,
                      "salt": 0.09,
                      "fiber": 0
                  },
                  "name": "A-fil Ekologisk 3%",
                  "brand": "Garant Eko",
                  "ean": "7311041071953",
                  "category": [
                      "mejeri-ost-och-agg",
                      "filmjolk-och-yoghurt",
                      "filmjolk"
                  ],
                  "kcal_100g": 58
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/meals/date/{date}": {
      "get": {
        "summary": "Fetch all meals for a specific date",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "schema": { "type": "string" },
            "required": true,
            "description": "The date of the meals in YYYY-MM-DD format"
          }
        ],
        "responses": {
          "200": {
            "description": "Day meal plan including for the specified date. Contains only the meals that are saved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealsSingleDay"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/meals": {
      "post": {
        "summary": "Create a new meal",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MealCreateInput"
              },
              "example": {
                "type": "dinner",
                "date": "2025-04-23",
                "foodItems": [
                  {
                    "ean": "5038862003636",
                    "weight": 12,
                    "unit": "g"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Meal successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete all meals of a user",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "204": {
            "description": "Meals successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MealEntry"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/meals/{id}/add": {
      "patch": {
        "summary": "Add a food item to a meal",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id of the meal to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodItemCreateInput"
              },
              "example": {
                "ean": "5038862003636",
                "weight": 50,
                "unit": "g"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Food item successfully added to the meal. Returns the id of the new food item.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "6805773e386f47da9e70bf56"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/meals/{id}/upd": {
      "patch": {
        "summary": "Update a food item in a meal",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id of the meal to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoodItemUpdateInput"
              },
              "example": {
                "id": "6805773e386f47da9e70bf56",
                "weight": 70,
                "unit": "g"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Food item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "6805773e386f47da9e70bf56"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/meals/{id}/del/{foodItemId}": {
      "patch": {
        "summary": "Delete a food item from a meal",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id of the meal"
          },
          {
            "in": "path",
            "name": "foodItemId",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id of the food item to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Food item successfully removed from meal"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/meals/{id}": {
      "delete": {
        "summary": "Delete a meal",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "Id of the meal to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Meal successfully deleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "description": "Unique identifier of the user",
                      "example": "6805773e386f47da9e70bf56"
                    },
                    "gender": {
                      "type": "string",
                      "enum": ["m", "f"],
                      "description": "Gender of the user",
                      "example": "m"
                    },
                    "currentWeight": {
                      "type": "number",
                      "description": "Current weight of the user in kilograms",
                      "example": 70
                    },
                    "targetWeight": {
                      "type": "number",
                      "description": "Target weight of the user in kilograms",
                      "example": 65
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the user in centimeters",
                      "example": 175
                    },
                    "weeklyChange": {
                      "type": "number",
                      "description": "The target weekly weight change for the user in kilograms",
                      "example": 0.5
                    },
                    "activityLevel": {
                      "type": "string",
                      "enum": ["sedentary", "light", "moderate", "heavy", "athlete"],
                      "description": "The user's activity level",
                      "example": "moderate"
                    },
                    "history": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "effectiveDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date the user's weight history was updated",
                            "example": "2025-04-23T10:00:00Z"
                          },
                          "currentWeight": {
                            "type": "number",
                            "description": "The user's weight at the given date",
                            "example": 70
                          },
                          "age": {
                            "type": "number",
                            "description": "The user's age at the given date",
                            "example": 30
                          },
                          "height": {
                            "type": "number",
                            "description": "The user's height at the given date",
                            "example": 175
                          }
                        }
                      },
                      "description": "The user's weight and other details over time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the user was created",
                      "example": "2025-04-23T10:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the user information was last updated",
                      "example": "2025-04-23T10:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "summary": "Register user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "summary": "Update user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User information updated successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User information successfully deleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "BadRequest": {
        "description": "For example validation error",
        "content": {
          "application/json": {
            "example": {
              "status_code": 400,
              "error": "Bad Request"
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Missing or invalid JWT token",
        "content": {
          "application/json": {
            "example": {
              "status_code": 401,
              "error": "Unauthorized"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "example": {
              "status_code": 404,
              "message": "Not found"
            }
          }
        }
      },
      "Conflict": {
        "description": "Duplicate entry",
        "content": {
          "application/json": {
            "example": {
              "status_code": 409,
              "message": "Conflict"
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "example": {
              "status_code": 500,
              "error": "Unexpected server error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier of the user",
            "example": "6805773e386f47da9e70bf56"
          },
          "gender": {
            "type": "string",
            "enum": ["m", "f"],
            "description": "Gender of the user",
            "example": "m"
          },
          "currentWeight": {
            "type": "number",
            "description": "Current weight of the user in kilograms",
            "example": 70
          },
          "targetWeight": {
            "type": "number",
            "description": "Target weight of the user in kilograms",
            "example": 65
          },
          "height": {
            "type": "number",
            "description": "Height of the user in centimeters",
            "example": 175
          },
          "weeklyChange": {
            "type": "number",
            "description": "The target weekly weight change for the user in kilograms",
            "example": 0.5
          },
          "activityLevel": {
            "type": "string",
            "enum": ["sedentary", "light", "moderate", "heavy", "athlete"],
            "description": "The user's activity level",
            "example": "moderate"
          },
          "age": {
            "type": "number",
            "description": "The user's age",
            "example": 30
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the user's weight history was updated",
            "example": "2025-04-23T10:00:00Z"
          }
        },
        "required": [
          "userId",
          "gender",
          "currentWeight",
          "targetWeight",
          "height",
          "weeklyChange",
          "activityLevel",
          "age",
          "effectiveDate"
        ]
      },

      "FoodItemUpdateInput": {
        "type": "object",
        "required": ["id", "weight", "unit"],
        "properties": {
          "id": {
            "type": "string",
            "example": "6805773e386f47da9e70bf56"
          },
          "weight": {
            "type": "number",
            "example": 70
          },
          "unit": {
            "type": "string",
            "enum": ["g"],
            "example": "g"
          }
        }
      },
      "FoodItemCreateInput": {
        "type": "object",
        "required": ["ean", "weight", "unit"],
        "properties": {
          "ean": {
            "type": "string",
            "example": "5038862003636"
          },
          "weight": {
            "type": "number",
            "example": 50
          },
          "unit": {
            "type": "string",
            "enum": ["g"],
            "example": "g"
          }
        }
      },
      "MealCreateInput": {
        "type": "object",
        "required": ["type", "date", "foodItems"],
        "properties": {
          "type": {
            "type": "string",
            "example": "dinner"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-04-23"
          },
          "foodItems": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["ean", "weight", "unit"],
              "properties": {
                "ean": { "type": "string", "example": "5038862003636" },
                "weight": { "type": "number", "example": 12 },
                "unit": {
                  "type": "string",
                  "enum": ["g"],
                  "example": "g"
                }
              }
            }
          }
        }
      },
      "MealsSingleDay": {
        "type": "object",
        "properties": {
          "breakfast": { "$ref": "#/components/schemas/MealEntry" },
          "snack1": { "$ref": "#/components/schemas/MealEntry" },
          "lunch": { "$ref": "#/components/schemas/MealEntry" },
          "snack2": { "$ref": "#/components/schemas/MealEntry" },
          "dinner": { "$ref": "#/components/schemas/MealEntry" },
          "snack3": { "$ref": "#/components/schemas/MealEntry" }
        },
        "additionalProperties": false
      },
      "MealEntry": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "example": "snack1" },
          "date": { "type": "string", "format": "date", "example": "2025-04-19" },
          "foodItems": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FoodItem" }
          },
          "id": { "type": "string", "example": "68056d9809d9b5724d0b9c4a" }
        }
      },
      "FoodItem": {
        "type": "object",
        "properties": {
          "ean": { "type": "string", "example": "7340005405176" },
          "weight": { "type": "number", "example": 50 },
          "unit": { "type": "string", "example": "g" },
          "name": { "type": "string", "example": "Chili Cream Cheese Dippmix" },
          "brand": { "type": "string", "example": "Olw" },
          "kcal_100g": { "type": "number", "example": 320 },
          "macros_100g": {
            "type": "object",
            "properties": {
              "fat": { "type": "number", "example": 3.4 },
              "saturatedFat": { "type": "number", "example": 1.3 },
              "carbohydrates": { "type": "number", "example": 60 },
              "sugars": { "type": "number", "example": 41 },
              "protein": { "type": "number", "example": 9.7 },
              "salt": { "type": "number", "example": 14.7 },
              "fiber": { "type": "number", "example": 0 }
            }
          },
          "img": {
            "type": "object",
            "properties": {
              "sm": {
                "type": "string",
                "format": "uri",
                "example": "https://assets.axfood.se/image/upload/f_auto,t_100/07340005405176_C1N1_s02"
              }
            }
          },
          "_id": { "type": "string", "example": "68056dc709d9b5724d0b9cfe" },
          "id": { "type": "string", "example": "68056dc709d9b5724d0b9cfe" }
        }
      }
    }
  }
}
