.before_script_ssh_setup: &before_script_ssh_setup
  # Ensure ssh-agent is installed and started, essential for managing SSH keys.
  # (Change apt-get to yum if using an RPM-based image)
  - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )

  # Start the ssh-agent in the background.
  - eval $(ssh-agent -s)

  # Add the SSH private key stored in the SSH_PRIVATE_KEY variable to the ssh-agent.
  # Using 'tr' to remove carriage return characters for compatibility with ed25519 keys.
  # Reference: https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  # Create the .ssh directory and set the correct permissions.
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  # Use ssh-keyscan to add the remote server's SSH key to the known_hosts file.
  # This prevents SSH from prompting for approval of the remote server's key.
  - ssh-keyscan -H $PRODUCTION_HOST >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

# Specify the Docker image to be used for the jobs, which supports Docker commands.
image: docker:27-cli

stages:
  - lint
  - test:unit
  - test:scen
  - deploy

variables:
  NODE_ENV: test
  PORT: 8080
  DB_CONNECTION_STRING: 'mongodb://mongo:27017/data_test'
  AUTH_TOKEN_SECRET_PATH: './public.pem'

lint:
  stage: lint
  image: node:20
  script:
    - npm ci
    - npm run lint
  when: always

test:unit:
  stage: test:unit
  image: node:20
  script:
    - npm ci
    - npm run test:unit
  when: always

test:scen:
  stage: test:scen
  image: node:20
  services:
    - mongo:7.0.4
  script:
    - echo "$TEST_PUBLIC_PEM" > public.pem
    - npm ci
    - npm run test:scen
  when: always

deploy:
  stage: deploy
  environment:
    name: production
    url: http://$PRODUCTION_HOST
  before_script: *before_script_ssh_setup
  variables:
    DOCKER_HOST: ssh://ubuntu@$PRODUCTION_HOST
  script:
    - echo "Deploying using Docker over SSH to $PRODUCTION_HOST..."
    - docker compose -f docker-compose.yml up -d --build
  only:
    - main
  needs:
    - lint
    - test:unit
    - test:scen
